configurations {
    jcup
}

ext {
    parserDescription = file("${projectDir}/src/main/resources/mc.cup")
    jcupOutput = file("${projectDir}/src/main/java/org/mc/parser")
    jcupLib = 'net.sf.squirrel-sql.thirdparty.non-maven:java-cup:11a'
}

dependencies {
    jcup ext.jcupLib
    compile ext.jcupLib
    compile project(':lexer')
}

task createSourceDirectories() << {
    project.jcupOutput.mkdirs()
}

task(generateParser, type: JavaExec) {
    inputs.file project.parserDescription
    outputs.file project.jcupOutput

    classpath = configurations.jcup
    main = 'java_cup.Main'
    args = [
            "-destdir", "${project.jcupOutput}",
            "-parser", "Parser",
            "${project.parserDescription}"
    ]
}

generateParser.dependsOn createSourceDirectories

compileScala.dependsOn generateParser

compileScala.taskDependencies.values = compileScala.taskDependencies.values - 'compileJava'
compileJava.dependsOn compileScala

sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []